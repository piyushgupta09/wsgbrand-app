{"version":3,"file":"js/680.3220dfb0.js","mappings":"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","sources":["webpack://wsgbrand-app-v1/./src/modules/vendor/pages/ledgers/LedgerDetailPage.vue","webpack://wsgbrand-app-v1/./src/modules/vendor/pages/ledgers/LedgerDetailPage.vue?1cbd"],"sourcesContent":["<template>\n    <div class=\"font-title\">\n        \n        <LedgerFilters \n            :product=\"ledger.product\"\n            :info=\"{\n                label1: 'Total Order',\n                label2: 'Dispatch Done',\n                value1: ledger.total_order,\n                value2: ledger.total_dispatch,\n            }\"\n            @ledger-filters-changed=\"handleFiltersChange\" \n        />\n\n        <div v-if=\"!addDispatch && !addAdjustment\" class=\"border\">\n            <table class=\"table table-striped table-borderless mb-0\" style=\"font-weight: 500\">\n                <thead>\n                    <tr class=\"table-dark\">\n                        <th class=\"ps-3 fw-bold text-start\">Date</th>\n                        <th class=\"fw-bold text-start\">Order</th>\n                        <th class=\"pe-3 fw-bold text-end\">Dispatch</th>\n                    </tr>\n                </thead>\n\n                <!-- Check if there are any ledger items -->\n                <tbody v-if=\"ledger.items && ledger.items.data && ledger.items.data.length\">\n                    <!-- Check if filteredLedgerItems has items -->\n                    <template v-if=\"hasFilteredItems\">\n                        <tr v-show=\"shouldShow(ledgerItem)\" v-for=\"(ledgerItem, ledgerItemIndex) in filteredLedgerItems\"\n                            :key=\"ledgerItemIndex\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#ledgerInfoModal\"\n                            :data-bs-ledgermodelsid=\"ledgerItem.model_sid\" aria-controls=\"ledgerInfoModal\">\n                            <td class=\"ps-3 text-start\">\n                                {{ formatDate(ledgerItem.created_at) }}\n                            </td>\n                            <td colspan=\"3\" class=\"pe-3\" :class=\"[\n                                getTableDataClass(ledgerItem),\n                                getActiveClass(ledgerItem),\n                                { 'text-danger': ledgerItem.model === 'adjustment' },\n                            ]\">\n                                {{ ledgerItem.quantity.toLocaleString() }}\n                            </td>\n                        </tr>\n                    </template>\n                    <!-- No data available due to filter conditions -->\n                    <tr v-else>\n                        <td colspan=\"4\" class=\"py-5 text-center\">\n                            <span>No data available based on current filter.</span>\n                        </td>\n                    </tr>\n                </tbody>\n\n                <tfoot v-if=\"ledger.items && ledger.items.data && ledger.items.data.length\">\n                    <tr class=\"table-dark\">\n                        <td class=\"ps-3 text-start fw-bold\" style=\"min-width: 90px\">\n                            Total\n                        </td>\n                        <td class=\"text-start\" style=\"min-width: 90px\">\n                            {{ calculateTotal(\"order\").toLocaleString() }}\n                        </td>\n                        <td class=\"pe-3 text-end\" style=\"min-width: 90px\">\n                            {{ calculateTotal(\"dispatch\").toLocaleString() }}\n                        </td>\n                    </tr>\n                </tfoot>\n            </table>\n            <!-- Pagination -->\n            <nav v-if=\"ledger.items && ledger.items.data && ledger.items.data.length\" aria-label=\"Page navigation\">\n                <ul class=\"pagination\">\n                    <li class=\"page-item flex-fill\" v-for=\"link in visibleLinks\" :key=\"link.label\"\n                        :class=\"{ disabled: !link.url }\">\n                        <a class=\"page-link text-center text-dark\" href=\"#\" v-if=\"link.label.includes('Previous')\"\n                            @click.prevent=\"loadLedger(link.url)\">\n                            <i class=\"bi bi-chevron-left\"></i>\n                        </a>\n                        <a class=\"page-link text-center text-dark\" href=\"#\" v-else-if=\"link.label.includes('Next')\"\n                            @click.prevent=\"loadLedger(link.url)\">\n                            <i class=\"bi bi-chevron-right\"></i>\n                        </a>\n                        <a href=\"#\" :class=\"{\n                            'text-primary fw-bold': this.activePage == link.label,\n                            'text-dark': this.activePage != link.label,\n                        }\" class=\"page-link text-center\" v-else @click.prevent=\"loadLedger(link.url)\">\n                            {{ link.label }}\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n\n        <table class=\"table table-striped table-borderless\">\n            <tbody>\n                <tr>\n                    <td class=\"ps-3\">\n                        <router-link :to=\"{ name: 'VendorOrders'}\" class=\"btn btn-sm btn-dark rounded-0\">\n                            <i class=\"bi bi-chevron-left\"></i>\n                        </router-link>\n                        <span class=\"ms-3\">Order Pending</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{\n                            ledger.readyable_qty ? ledger.readyable_qty.toLocaleString() : 0\n                        }}\n                        pcs\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"ps-3\">\n                        <button class=\"btn btn-sm btn-dark rounded-0\" @click=\"showAddDispatch\">\n                            <i class=\"bi bi-plus-lg\"></i>\n                        </button>\n                        <span class=\"ms-3\">Dispatch Pending</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{\n                            ledger.dispatchable_qty\n                            ? ledger.dispatchable_qty.toLocaleString()\n                            : 0\n                        }}\n                        pcs\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"ps-3\">\n                        <button class=\"btn btn-sm btn-dark rounded-0\" @click=\"showAddAdjustment\">\n                            <i class=\"bi bi-plus-lg\"></i>\n                        </button>\n                        <span class=\"ms-3\">Ledger Balance</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{ ledger.balance_qty ? ledger.balance_qty.toLocaleString() : 0 }}\n                        pcs\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div v-if=\"addDispatch || addAdjustment\" class=\"card mx-3 shadow\">\n            <div class=\"card-body\">\n                <form v-if=\"addDispatch\" @submit.prevent=\"postDispatch()\" method=\"post\">\n                    <LedgerForm :product=\"ledger.product\" type=\"dispatch\" @formData=\"handleFormData\" />\n                    <div class=\"btn-group w-100\">\n                        <button class=\"btn btn-sm btn-outline-dark fw-bold\" type=\"button\" @click=\"showLedgerSummary\">\n                            Cancel\n                        </button>\n                        <button class=\"btn btn-sm btn-success fw-bold\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n                <form v-if=\"addAdjustment\" @submit.prevent=\"postAdjustment()\" method=\"post\">\n                    <LedgerForm :product=\"ledger.product\" type=\"adjustment\" @formData=\"handleFormData\" />\n                    <div class=\"btn-group w-100\">\n                        <button class=\"btn btn-sm btn-outline-dark fw-bold\" type=\"button\" @click=\"showLedgerSummary\">\n                            Cancel\n                        </button>\n                        <button class=\"btn btn-sm btn-success fw-bold\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <div class=\"modal fade\" id=\"ledgerImageModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-fullscreen\">\n                <button type=\"button\" class=\"btn h-100 w-100 p-0\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                    <img src=\"https://placehold.co/400\" class=\"w-100\" style=\"object-fit: cover\" />\n                </button>\n            </div>\n        </div>\n\n        <LedgerInfo :items=\"ledger.items\" />\n        \n    </div>\n</template>\n\n<script>\nimport \"sweetalert2/dist/sweetalert2.min.css\";\nimport Swal from \"sweetalert2\";\nimport LedgerFilters from \"@/components/LedgerFilters.vue\";\nimport LedgerInfo from \"@/components/LedgerInfo.vue\";\nimport LedgerForm from \"@/components/LedgerForm.vue\";\n\nexport default {\n    name: \"LedgerDetailPage\",\n    components: {\n        LedgerFilters,\n        LedgerInfo,\n        LedgerForm,\n    },\n    data() {\n        return {\n            filters: [],\n            formData: [],\n            addDispatch: false,\n            addAdjustment: false,\n            total: 0,\n            activePage: 1,\n            visibleLinks: [],\n        };\n    },\n    watch: {\n        'ledger.items': {\n            immediate: true,\n            handler() {\n                this.calculateVisibleLinks();\n            },\n        },\n        activePage() {\n            this.calculateVisibleLinks();\n        },\n    },\n    created() {\n        console.log(\"Vendor LedgerDetailPage created\");\n        this.loadLedger(\"\", true);\n        console.log(\"Vendor LedgerDetailPage created\");\n    },\n    mounted() {\n        const productImageModal = document.getElementById(\"ledgerImageModal\");\n        if (productImageModal) {\n            productImageModal.addEventListener(\"show.bs.modal\", (event) => {\n                const triggerElement = event.relatedTarget;\n                const imageUrl = triggerElement.getAttribute(\"data-bs-url\");\n                const modalImage = productImageModal.querySelector(\".modal-dialog img\");\n                modalImage.src = imageUrl;\n            });\n        }\n    },\n    computed: {\n        ledger() {\n            return this.$store.getters[\"vendor/ledger\"];\n        },\n        filteredLedgerItems() {\n            const startDate = new Date(this.filters.startDate);\n            const endDate = new Date(this.filters.endDate);\n            return this.ledger.items.data.filter((item) => {\n                const createdAt = new Date(item.created_on);\n                return createdAt >= startDate && createdAt <= endDate;\n            });\n        },\n        hasFilteredItems() {\n            return this.filteredLedgerItems && this.filteredLedgerItems.length > 0;\n        },\n    },\n    methods: {\n        calculateVisibleLinks() {\n            const totalPages = this.ledger.items.links.length - 2; // Assuming first and last links are \"Previous\" and \"Next\"\n            let startPage = Math.max(1, this.activePage - 4);\n            let endPage = Math.min(totalPages, this.activePage + 3);\n\n            if (totalPages > 8) {\n                if (endPage - startPage < 7) {\n                    // Adjust range to maintain 8 links when near start or end\n                    if (startPage === 1) {\n                        endPage = 8;\n                    } else if (endPage === totalPages) {\n                        startPage = totalPages - 7;\n                    }\n                }\n            } else {\n                startPage = 1;\n                endPage = totalPages;\n            }\n\n            this.visibleLinks = this.ledger.items.links.filter((link, index) => {\n                return (\n                    link.label.includes('Previous') ||\n                    link.label.includes('Next') ||\n                    (index >= startPage && index <= endPage)\n                );\n            });\n        },\n        loadLedger(pageurl, firstload) {\n            this.activePage = 1;\n            if (!firstload) {\n                this.activePage = pageurl.split(\"=\")[1];\n            }\n            this.$store.dispatch(\"vendor/fetchProductLedger\", {\n                ledger: this.$route.params.ledger,\n                page: this.activePage,\n            });\n        },\n        showAddDispatch() {\n            this.addAdjustment = false;\n            this.addDispatch = true;\n        },\n        showAddAdjustment() {\n            this.addDispatch = false;\n            this.addAdjustment = true;\n        },\n        showLedgerSummary() {\n            this.addDispatch = false;\n            this.addAdjustment = false;\n        },\n        getTableDataClass(order) {\n            switch (order.model) {\n                case \"order\":\n                    return this.filters.order ? \"text-start\" : \"text-danger\";\n                case \"dispatch\":\n                    return this.filters.dispatch ? \"text-end\" : \"text-danger\";\n                case \"adjustment\":\n                    return this.againTry(order);\n                default:\n                    return \"text-end\";\n            }\n        },\n        againTry(order) {\n            switch (order.type) {\n                case \"order\":\n                    return this.filters.adjustment ? \"text-start\" : \"text-danger\";\n                case \"dispatch\":\n                    return this.filters.adjustment ? \"text-end\" : \"text-danger\";\n            }\n        },\n        //\n        handleInput(color) {\n            if (color && typeof color === \"object\") {\n                // Ensure the color object and quantity property are defined\n                if (color.quantity === undefined) {\n                    this.$set(color, \"quantity\", 0); // Set a default value if quantity is undefined\n                }\n\n                // Ensure the entered value is not less than 0\n                color.quantity = Math.max(0, color.quantity);\n            }\n        },\n        getActiveClass(order) {\n            return {\n                \"text-primary\": order.status === \"issued\",\n                \"text-warning\": order.status === \"cancelled\",\n                \"text-dark\": order.status === \"accepted\",\n            };\n        },\n        shouldShow(ledgerItem) {\n            let result = this.filters[ledgerItem.model];\n            if (ledgerItem.model === 'ready' || ledgerItem.model === 'demand') {\n                return false;\n            }\n            if (ledgerItem.model === \"adjustment\") {\n                return result && this.filters[ledgerItem.type];\n            } else {\n                return result;\n            }\n        },\n        calculateTotal(model) {\n            // Check for the necessary conditions using optional chaining\n            if (\n                !this.ledger?.items?.data ||\n                !Array.isArray(this.ledger.items.data) ||\n                !this.filters[model]\n            ) {\n                return 0;\n            }\n\n            // Use reduce directly without a separate filter step\n            return this.ledger.items.data.reduce((total, item) => {\n                // Add item quantity if the item matches the model or is an adjustment of the same type\n                if (item.model === model) {\n                    return total + item.quantity;\n                } else if (\n                    item.model === \"adjustment\" &&\n                    item.type === model &&\n                    this.filters[\"adjustment\"]\n                ) {\n                    return total - item.quantity;\n                }\n                return total; // Otherwise, keep the total unchanged\n            }, 0);\n        },\n        formatDate(dateTimeString) {\n            const options = {\n                weekday: \"short\",\n                month: \"short\",\n                day: \"numeric\",\n            };\n            const formattedTime = new Date(dateTimeString).toLocaleDateString(\n                \"en-US\",\n                options\n            );\n            return formattedTime;\n        },\n        postDispatch() {\n            if (this.ledger.product.options && this.total > 0) {\n\n                // Map each option option to its selected ranges and quantities\n                const quantities = this.ledger.product.options\n                    .map((option, index) => {\n\n                        // Get selected ranges for this option\n                        const selectedRanges = this.ledger.product.ranges\n                            .filter((range) => {\n                                const key = `${option.sid}_${range.sid}`;\n                                return this.formData.ranges[key]; // Check if this range is selected\n                            });\n                        \n                        // Calculate the quantity for each range, ensure it's at least 1, and round up\n                        const quantityPerRange = selectedRanges.length > 0\n                            ? Math.max(Math.ceil(this.formData.quantity[index] / selectedRanges.length), 1)\n                            : 0;\n                        \n                        return selectedRanges.map((range) => {\n                            const key = `${option.sid}_${range.sid}`;\n                            return { [key]: quantityPerRange };\n                        });\n                    })\n                    .flat();\n\n                // loop thru quantities and check that value should not be undefined or null or Nan\n                // also compute total quantity and is should not exceed ledger.readeable_aty\n                let totalQty = 0;\n                let checkQuantities = [];\n                quantities.forEach((quantity) => {\n                    const key = Object.keys(quantity)[0];\n                    const value = quantity[key];\n                    if (value && value > 0) {\n                        totalQty += value;\n                        checkQuantities.push(quantity);\n                    }\n                });\n\n                console.log(totalQty, this.ledger.readyable_qty);\n                if (totalQty > this.ledger.readyable_qty) {\n                    this.showQtyError(\n                        \"Quantity Error\",\n                        \"Total quantity should not exceed \" + this.ledger.dispatchable_qty + \" pcs.\"\n                    );\n                    return;\n                }\n\n                // Prepare the data for dispatch\n                const data = {\n                    ledger_sid: this.ledger.sid,\n                    content: this.formData.content,\n                    expected_at: this.formData.date,\n                    quantities: JSON.stringify(checkQuantities),\n                };\n\n                // Dispatch the action\n                this.$store.dispatch(\"factory/postNewDispatch\", data);\n\n                // Close the form\n                this.showLedgerSummary();\n\n            } else {\n                console.log(\n                    \"Quantity total is 0 or less, or ledger is empty. Skipping post request.\"\n                );\n            }\n        },\n        showQtyError(title, message) {\n            Swal.fire({\n                icon: \"error\",\n                title: title,\n                text: message,\n            });\n        },\n        handleFiltersChange(filters) {\n            this.filters = filters;\n        },\n        handleFormData(data) {\n            this.formData = data.data;\n            this.total = data.total;\n        },\n    },\n};\n</script>\n\n<style scoped>\n.custom-offcanvas-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1045;\n}\n\n.nav-link.active {\n    color: #fff;\n    /* background-color: #28CC9E; */\n    background-color: #000;\n}\n</style>\n","import { render } from \"./LedgerDetailPage.vue?vue&type=template&id=3771c78f&scoped=true\"\nimport script from \"./LedgerDetailPage.vue?vue&type=script&lang=js\"\nexport * from \"./LedgerDetailPage.vue?vue&type=script&lang=js\"\n\nimport \"./LedgerDetailPage.vue?vue&type=style&index=0&id=3771c78f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-3771c78f\"]])\n\nexport default __exports__"],"names":["class","key","style","_createElementVNode","colspan","_hoisted_9","_hoisted_19","_hoisted_22","_hoisted_31","_hoisted_36","type","id","tabindex","src","_createElementBlock","_hoisted_1","_createVNode","_component_LedgerFilters","product","$options","ledger","info","total_order","total_dispatch","onLedgerFiltersChanged","handleFiltersChange","$data","addDispatch","addAdjustment","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","items","data","length","_hoisted_5","hasFilteredItems","_Fragment","_renderList","filteredLedgerItems","ledgerItem","ledgerItemIndex","model_sid","_hoisted_7","_toDisplayString","formatDate","created_at","_normalizeClass","getTableDataClass","getActiveClass","model","quantity","toLocaleString","_hoisted_6","shouldShow","_hoisted_8","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","calculateTotal","_hoisted_15","_hoisted_16","_hoisted_17","visibleLinks","link","disabled","url","label","includes","href","onClick","_withModifiers","$event","loadLedger","_hoisted_20","_hoisted_18","_hoisted_23","_hoisted_21","activePage","_hoisted_24","_hoisted_25","_hoisted_26","_component_router_link","to","name","default","_withCtx","_hoisted_27","_","_hoisted_28","_hoisted_29","readyable_qty","_hoisted_30","_cache","args","showAddDispatch","_hoisted_32","_hoisted_33","_hoisted_34","dispatchable_qty","_hoisted_35","showAddAdjustment","_hoisted_37","_hoisted_38","_hoisted_39","balance_qty","_hoisted_40","_hoisted_41","onSubmit","postDispatch","method","_component_LedgerForm","onFormData","handleFormData","_hoisted_42","showLedgerSummary","_hoisted_43","_ctx","postAdjustment","_hoisted_44","_hoisted_45","_hoisted_46","_component_LedgerInfo","components","LedgerFilters","LedgerInfo","LedgerForm","filters","formData","total","watch","immediate","handler","this","calculateVisibleLinks","created","console","log","mounted","productImageModal","document","getElementById","addEventListener","event","triggerElement","relatedTarget","imageUrl","getAttribute","modalImage","querySelector","computed","$store","getters","startDate","Date","endDate","filter","item","createdAt","created_on","methods","totalPages","links","startPage","Math","max","endPage","min","index","pageurl","firstload","split","dispatch","$route","params","page","order","againTry","adjustment","handleInput","color","undefined","$set","status","result","Array","isArray","reduce","dateTimeString","options","weekday","month","day","formattedTime","toLocaleDateString","quantities","map","option","selectedRanges","ranges","range","sid","quantityPerRange","ceil","flat","totalQty","checkQuantities","forEach","Object","keys","value","push","showQtyError","ledger_sid","content","expected_at","date","JSON","stringify","title","message","Swal","icon","text","__exports__","render"],"sourceRoot":""}