{"version":3,"file":"js/1296.8d9d909f.js","mappings":"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","sources":["webpack://wsgbrand-app-v1/./src/modules/brandy/pages/orders/PurchaseOrdersPage.vue","webpack://wsgbrand-app-v1/./src/modules/brandy/pages/orders/PurchaseOrdersPage.vue?70bf"],"sourcesContent":["<template>\n    <div>\n        <OrderFilters\n            :title=\"title\"\n            :parties=\"parties\"\n            :filters=\"filters\"\n            :statuses=\"statuses\"\n            @order-filter-updated=\"handleFiltersChange\">\n        </OrderFilters>\n        <OrderTabs :links=\"links\"></OrderTabs>\n        <div v-if=\"orders && orders.length\">\n            <div v-for=\"(order, orderIndex) in filteredOrders\" :key=\"orderIndex\">\n                <ul v-if=\"Object.keys(filteredOrders).length\" class=\"list-group list-group-flush\">\n                    <OrderCard :order=\"order\" :type=\"cardType\" />\n                </ul>\n                <div v-else class=\"py-5\">\n                    <p class=\"text-muted text-center bg-light my-2\">\n                        No order found for the selected filters.\n                    </p>\n                </div>\n            </div>\n        </div>\n        <EmptyList v-else title=\"No Orders Available\"></EmptyList>\n        <OrderDetails :orders=\"filteredOrders\"  :type=\"cardType\" />\n    </div>\n</template>\n\n<script>\nimport Axios from '@/services/axios';\nimport EmptyList from '@/components/EmptyList.vue';\nimport OrderTabs from '@/components/OrderTabs.vue';\nimport OrderCard from '@/components/OrderCard.vue';\nimport OrderFilters from '@/components/OrderFilters.vue';\nimport OrderDetails from '@/components/OrderDetails.vue';\n\nexport default {\n    name: 'OrdersPage',\n    components: {\n        OrderTabs,\n        OrderCard,\n        EmptyList,\n        OrderDetails,\n        OrderFilters,\n    },\n    data() {\n        return {\n            title: 'Orders',\n            page: 1,\n            isFetching: false,\n            orders: [],\n            filters: {\n                date: '',\n                search: '',\n                selectedParty: '',\n                selectedStatus: 'issued',\n                sortBys: [\n                    { name: { on: 'Latest Order', off: 'Oldest Order' }, selected: true },\n                    { name: { on: 'Nearest Delivery', off: 'Furthest Delivery' }, selected: false },\n                    { name: { on: 'Highest Quantity', off: 'Lowest Quantity' }, selected: false },\n                ],\n            },\n            links: [\n                { name: 'BrandSaleOrders', label: 'Wsg Orders' },\n                { name: 'BrandPurchaseOrders', label: 'Party Orders' }\n            ],\n        };\n    },\n    mounted() {\n        this.loadMore();\n        window.addEventListener('scroll', this.handleScroll);\n        window.addEventListener('scroll', this.handleScroll);\n    },\n    unmounted() {\n        window.removeEventListener('scroll', this.handleScroll);\n    },\n    watch: {\n        prefix: {\n            handler(newValue) {\n                if (newValue  === 'brand') {\n                    this.filters.selectedParty = '';\n                    this.filters.selectedStatus = 'rejected';\n                }\n                else if (newValue === 'factory' || newValue === 'vendor') {\n                    this.filters.selectedParty = this.parties[0].sid;\n                    this.filters.selectedStatus = 'issued';\n                }\n            },\n            immediate: true,\n        },\n    },\n    computed: {\n        cardType() {\n            return this.$store.getters['authy/getPrefix'] === 'brand' ? 'brand' : 'party';\n        },\n        statuses() {\n            return [\n                { text: 'Issued', value: 'issued' },\n                { text: 'Accepted', value: 'accepted' },\n                { text: 'Rejected', value: 'rejected' },\n                { text: 'Completed', value: 'completed' },\n            ];\n        },\n        parties() {\n            const localOrders = this.orders;\n            const uniquePartiesMap = {};\n            const uniqueParties = [];\n\n            if (localOrders) {\n                localOrders.forEach(order => {\n                    // Use sid as the key in the map.\n                    const sid = order.party_sid;\n                    // If this sid hasn't been added to uniqueParties, add it.\n                    if (!uniquePartiesMap[sid]) {\n                        uniqueParties.push(order.party);\n                        uniquePartiesMap[sid] = true; // Mark this sid as added.\n                    }\n                });\n            }\n            \n            return uniqueParties;\n        },\n        filteredOrders() {\n            let orders = this.orders;\n\n            if (this.filters.search) {\n                const searchTerm = this.filters.search.toLowerCase();\n                orders = orders.filter((order) => {\n                    const orderTags = order.tags.split(',');\n                    return orderTags.some(tag => tag.toLowerCase().includes(searchTerm.trim()));\n                });\n            }\n\n            if (this.filters.selectedParty) {\n                orders = orders.filter(order => order.party.sid === this.filters.selectedParty);\n            }\n\n            if (this.filters.selectedStatus) {\n                orders = orders.filter(order => order.status === this.filters.selectedStatus);\n            }\n\n            if (this.filters.sortBys[0].selected) {\n                orders = orders.sort((a, b) => new Date(b.created_at) - new Date(a.created_at));\n            } else {\n                orders = orders.sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n            }\n\n            if (this.filters.sortBys[1].selected) {\n                orders = orders.sort((a, b) => new Date(b.expected_at) - new Date(a.expected_at));\n            } else {\n                orders = orders.sort((a, b) => new Date(a.expected_at) - new Date(b.expected_at));\n            }\n            \n            if (this.filters.sortBys[2].selected) {\n                orders = orders.sort((a, b) => b.quantity - a.quantity);\n            } else {\n                orders = orders.sort((a, b) => a.quantity - b.quantity);\n            }\n\n            return orders;\n        },\n        prefix() {\n            return this.$store.getters['authy/getPrefix'];\n        },\n    },\n    methods: {\n        handleScroll() {\n            const { scrollTop, scrollHeight, clientHeight } = document.documentElement;\n            if (clientHeight + scrollTop >= scrollHeight - 5) { // Check if near bottom\n                this.loadMore();\n            }\n        },\n        loadMore() {\n            if (this.isFetching)\n                return;\n            this.isFetching = true;\n            \n            Axios.get(`orders?page=${this.page}`)\n                .then((response) => {\n                    if (response.data.status === 'ok') {\n                        this.orders = [...this.orders, ...response.data.data.data];\n                        this.page++;\n                        this.isFetching = false;\n                    }\n                    else if (response.data.status === 'error') {\n                        this.isFetching = false;\n                        alert(response.data.message);\n                    }\n                    else {\n                        this.isFetching = false;\n                        alert('Something went wrong! Please try again');\n                    }\n                }).catch((error) => {\n                    this.isFetching = false;\n                    console.log(error);\n                    alert('Something went wrong! Please try again');\n                });\n        },\n        handleFiltersChange(filters) {\n            this.filters = filters;\n        },\n    },\n}\n</script>\n  ","import { render } from \"./PurchaseOrdersPage.vue?vue&type=template&id=9ab0eeee\"\nimport script from \"./PurchaseOrdersPage.vue?vue&type=script&lang=js\"\nexport * from \"./PurchaseOrdersPage.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["key","class","_createElementVNode","_hoisted_4","_createElementBlock","_createVNode","_component_OrderFilters","title","$data","parties","$options","filters","statuses","onOrderFilterUpdated","handleFiltersChange","_component_OrderTabs","links","orders","length","_hoisted_1","_Fragment","_renderList","filteredOrders","order","orderIndex","Object","keys","_hoisted_2","_component_OrderCard","type","cardType","_hoisted_3","_hoisted_5","_createBlock","_component_EmptyList","_component_OrderDetails","name","components","OrderTabs","OrderCard","EmptyList","OrderDetails","OrderFilters","data","page","isFetching","date","search","selectedParty","selectedStatus","sortBys","on","off","selected","label","mounted","this","loadMore","window","addEventListener","handleScroll","unmounted","removeEventListener","watch","prefix","handler","newValue","sid","immediate","computed","$store","getters","text","value","localOrders","uniquePartiesMap","uniqueParties","forEach","party_sid","push","party","searchTerm","toLowerCase","filter","orderTags","tags","split","some","tag","includes","trim","status","sort","a","b","Date","created_at","expected_at","quantity","methods","scrollTop","scrollHeight","clientHeight","document","documentElement","Axios","get","then","response","alert","message","catch","error","console","log","__exports__","render"],"sourceRoot":""}