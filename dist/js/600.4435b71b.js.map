{"version":3,"file":"js/600.4435b71b.js","mappings":"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","sources":["webpack://wsgbrand-app-v1/./src/modules/factory/pages/ledgers/LedgerDetailPage.vue","webpack://wsgbrand-app-v1/./src/modules/factory/pages/ledgers/LedgerDetailPage.vue?4d30"],"sourcesContent":["<template>\n    <div class=\"font-title\">\n        \n        <LedgerFilters \n            :product=\"ledger.product\"\n            :info=\"{\n                label1: 'Ready Done',\n                label2: 'Dispatch Done',\n                value1: ledger.total_ready,\n                value2: ledger.total_dispatch,\n            }\"\n            @ledger-filters-changed=\"handleFiltersChange\" \n        />\n\n        <div v-if=\"!addReady && !addDispatch && !addAdjustment\" class=\"border\">\n            <table class=\"table table-striped table-borderless mb-0\" style=\"font-weight: 500\">\n                <thead>\n                    <tr class=\"table-dark\">\n                        <th class=\"ps-3 fw-bold text-start\">Date</th>\n                        <th class=\"fw-bold text-start\">Order</th>\n                        <th class=\"fw-bold text-center\">Ready</th>\n                        <th class=\"pe-3 fw-bold text-end\">Demand</th>\n                    </tr>\n                </thead>\n\n                <!-- Check if there are any ledger items -->\n                <tbody v-if=\"ledger.items && ledger.items.data && ledger.items.data.length\">\n                    <!-- Check if filteredLedgerItems has items -->\n                    <template v-if=\"hasFilteredItems\">\n                        <tr v-show=\"shouldShow(ledgerItem)\" v-for=\"(ledgerItem, ledgerItemIndex) in filteredLedgerItems\"\n                            :key=\"ledgerItemIndex\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#ledgerInfoModal\"\n                            :data-bs-ledgermodelsid=\"ledgerItem.model_sid\" aria-controls=\"ledgerInfoModal\">\n                            <td class=\"ps-3 text-start\">\n                                {{ formatDate(ledgerItem.created_at) }}\n                            </td>\n                            <td colspan=\"3\" class=\"pe-3\" :class=\"[\n                                getTableDataClass(ledgerItem),\n                                getActiveClass(ledgerItem),\n                                { 'text-danger': ledgerItem.model === 'adjustment' },\n                            ]\">\n                                {{ ledgerItem.quantity.toLocaleString() }}\n                            </td>\n                        </tr>\n                    </template>\n                    <!-- No data available due to filter conditions -->\n                    <tr v-else>\n                        <td colspan=\"4\" class=\"py-5 text-center\">\n                            <span>No data available based on current filter.</span>\n                        </td>\n                    </tr>\n                </tbody>\n\n                <tfoot v-if=\"ledger.items && ledger.items.data && ledger.items.data.length\">\n                    <tr class=\"table-dark\">\n                        <td class=\"ps-3 text-start fw-bold\" style=\"min-width: 90px\">\n                            Total\n                        </td>\n                        <td class=\"text-start\" style=\"min-width: 90px\">\n                            {{ calculateTotalOrder('order', ledger.items.data, 'accepted') }}\n                        </td>\n                        <td class=\"text-center\" style=\"min-width: 90px\">\n                            {{ calculateTotal(\"ready\").toLocaleString() }}\n                        </td>\n                        <td class=\"pe-3 text-end\" style=\"min-width: 90px\">\n                            {{ calculateTotal(\"demand\").toLocaleString() }}\n                        </td>\n                    </tr>\n                </tfoot>\n            </table>\n            <!-- Pagination -->\n            <nav v-if=\"ledger.items && ledger.items.data && ledger.items.data.length\" aria-label=\"Page navigation\">\n                <ul class=\"pagination\">\n                    <li class=\"page-item flex-fill\" v-for=\"link in visibleLinks\" :key=\"link.label\"\n                        :class=\"{ disabled: !link.url }\">\n                        <a class=\"page-link text-center text-dark\" href=\"#\" v-if=\"link.label.includes('Previous')\"\n                            @click.prevent=\"loadLedger(link.url)\">\n                            <i class=\"bi bi-chevron-left\"></i>\n                        </a>\n                        <a class=\"page-link text-center text-dark\" href=\"#\" v-else-if=\"link.label.includes('Next')\"\n                            @click.prevent=\"loadLedger(link.url)\">\n                            <i class=\"bi bi-chevron-right\"></i>\n                        </a>\n                        <a href=\"#\" :class=\"{\n                            'text-primary fw-bold': this.activePage == link.label,\n                            'text-dark': this.activePage != link.label,\n                        }\" class=\"page-link text-center\" v-else @click.prevent=\"loadLedger(link.url)\">\n                            {{ link.label }}\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n\n        </div>\n\n        <table class=\"table table-striped table-borderless\">\n            <tbody>\n                <tr>\n                    <td class=\"ps-3\">\n                        <button class=\"btn btn-sm btn-dark rounded-0\" @click=\"showAddReady\">\n                            <i class=\"bi bi-plus-lg\"></i>\n                        </button>\n                        <span class=\"ms-3\">In Production</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{\n                            ledger.readyable_qty ? ledger.readyable_qty.toLocaleString() : 0\n                        }}\n                        pcs\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"ps-3\">\n                        <button class=\"btn btn-sm btn-dark rounded-0\" @click=\"showAddDispatch\">\n                            <i class=\"bi bi-plus-lg\"></i>\n                        </button>\n                        <span class=\"ms-3\">Demand Raised</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{\n                            ledger.dispatchable_qty\n                            ? ledger.dispatchable_qty.toLocaleString()\n                            : 0\n                        }}\n                        pcs\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"ps-3\">\n                        <button class=\"btn btn-sm btn-dark rounded-0\" @click=\"showAddAdjustment\">\n                            <i class=\"bi bi-plus-lg\"></i>\n                        </button>\n                        <span class=\"ms-3\">Ledger Balance</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{ ledger.balance_qty ? ledger.balance_qty.toLocaleString() : 0 }}\n                        pcs\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div v-if=\"addReady || addDispatch || addAdjustment\" class=\"card mx-3 shadow\">\n            <div class=\"card-body\">\n                <form v-if=\"addReady\" @submit.prevent=\"postReady()\" method=\"post\">\n                    <LedgerForm :product=\"ledger.product\" type=\"ready\" @formData=\"handleFormData\" />\n                    <div class=\"btn-group w-100\">\n                        <button class=\"btn btn-sm btn-outline-dark fw-bold\" type=\"button\" @click=\"showLedgerSummary\">\n                            Cancel\n                        </button>\n                        <button class=\"btn btn-sm btn-success fw-bold\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n                <form v-if=\"addDispatch\" @submit.prevent=\"postDispatch()\" method=\"post\">\n                    <LedgerForm :product=\"ledger.product\" type=\"dispatch\" @formData=\"handleFormData\" />\n                    <div class=\"btn-group w-100\">\n                        <button class=\"btn btn-sm btn-outline-dark fw-bold\" type=\"button\" @click=\"showLedgerSummary\">\n                            Cancel\n                        </button>\n                        <button class=\"btn btn-sm btn-success fw-bold\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n                <form v-if=\"addAdjustment\" @submit.prevent=\"postAdjustment()\" method=\"post\">\n                    <LedgerForm :product=\"ledger.product\" type=\"adjustment\" @formData=\"handleFormData\" />\n                    <div class=\"btn-group w-100\">\n                        <button class=\"btn btn-sm btn-outline-dark fw-bold\" type=\"button\" @click=\"showLedgerSummary\">\n                            Cancel\n                        </button>\n                        <button class=\"btn btn-sm btn-success fw-bold\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <div class=\"modal fade\" id=\"ledgerImageModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-fullscreen\">\n                <button type=\"button\" class=\"btn h-100 w-100 p-0\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                    <img src=\"https://placehold.co/400\" class=\"w-100\" style=\"object-fit: cover\" />\n                </button>\n            </div>\n        </div>\n\n        <LedgerInfo :items=\"ledger.items\" />\n\n    </div>\n</template>\n\n<script>\nimport \"sweetalert2/dist/sweetalert2.min.css\";\nimport Swal from \"sweetalert2\";\nimport LedgerFilters from \"@/components/LedgerFilters.vue\";\nimport LedgerInfo from \"@/components/LedgerInfo.vue\";\nimport LedgerForm from \"@/components/LedgerForm.vue\";\n\nexport default {\n    name: \"LedgerDetailPage\",\n    components: {\n        LedgerFilters,\n        LedgerInfo,\n        LedgerForm,\n    },\n    data() {\n        return {\n            filters: [],\n            formData: [],\n            addReady: false,\n            addDispatch: false,\n            addAdjustment: false,\n            total: 0,\n            activePage: 1,\n            visibleLinks: [],\n        };\n    },\n    watch: {\n        'ledger.items': {\n            immediate: true,\n            handler() {\n                this.calculateVisibleLinks();\n            },\n        },\n        activePage() {\n            this.calculateVisibleLinks();\n        },\n    },\n    created() {\n        this.loadLedger(\"\", true);\n    },\n    mounted() {\n        this.$store.dispatch('factory/setShowBottomNav', true);\n        const productImageModal = document.getElementById(\"ledgerImageModal\");\n        if (productImageModal) {\n            productImageModal.addEventListener(\"show.bs.modal\", (event) => {\n                const triggerElement = event.relatedTarget;\n                const imageUrl = triggerElement.getAttribute(\"data-bs-url\");\n                const modalImage = productImageModal.querySelector(\".modal-dialog img\");\n                modalImage.src = imageUrl;\n            });\n        }\n    },\n    computed: {\n        ledger() {\n            return this.$store.getters[\"factory/ledger\"];\n        },\n        filteredLedgerItems() {\n            const startDate = new Date(this.filters.startDate);\n            const endDate = new Date(this.filters.endDate);\n            return this.ledger.items.data.filter((item) => {\n                const createdAt = new Date(item.created_on);\n                return createdAt >= startDate && createdAt <= endDate;\n            });\n        },\n        hasFilteredItems() {\n            return this.filteredLedgerItems && this.filteredLedgerItems.length > 0;\n        },\n    },\n    methods: {\n        calculateVisibleLinks() {\n\n            //return if ledger.items.links is not available\n            if (!this.ledger.items || !this.ledger.items.links) {\n                return;\n            }\n\n            // Assuming first and last links are \"Previous\" and \"Next\"\n            const totalPages = this.ledger.items.links.length - 2; \n            let startPage = Math.max(1, this.activePage - 4);\n            let endPage = Math.min(totalPages, this.activePage + 3);\n\n            if (totalPages > 8) {\n                if (endPage - startPage < 7) {\n                    // Adjust range to maintain 8 links when near start or end\n                    if (startPage === 1) {\n                        endPage = 8;\n                    } else if (endPage === totalPages) {\n                        startPage = totalPages - 7;\n                    }\n                }\n            } else {\n                startPage = 1;\n                endPage = totalPages;\n            }\n\n            this.visibleLinks = this.ledger.items.links.filter((link, index) => {\n                return (\n                    link.label.includes('Previous') ||\n                    link.label.includes('Next') ||\n                    (index >= startPage && index <= endPage)\n                );\n            });\n        },\n        loadLedger(pageurl, firstload) {\n            this.activePage = 1;\n            if (!firstload) {\n                this.activePage = pageurl.split(\"=\")[1];\n            }\n            this.$store.dispatch(\"factory/fetchProductLedger\", {\n                ledger: this.$route.params.ledger,\n                page: this.activePage,\n            });\n        },\n        showAddReady() {\n            this.addAdjustment = false;\n            this.addDispatch = false;\n            this.addReady = true;\n        },\n        showAddDispatch() {\n            this.addAdjustment = false;\n            this.addReady = false;\n            this.addDispatch = true;\n        },\n        showAddAdjustment() {\n            this.addReady = false;\n            this.addDispatch = false;\n            this.addAdjustment = true;\n        },\n        showLedgerSummary() {\n            this.addReady = false;\n            this.addDispatch = false;\n            this.addAdjustment = false;\n        },\n        getTableDataClass(order) {\n            switch (order.model) {\n                case \"order\":\n                    return this.filters.order ? \"text-start\" : \"text-danger\";\n                case \"ready\":\n                    return this.filters.ready ? \"text-center\" : \"text-danger\";\n                case \"demand\":\n                    return this.filters.demand ? \"text-end\" : \"text-danger\";\n                case \"adjustment\":\n                    return this.againTry(order);\n                default:\n                    return \"text-end\";\n            }\n        },\n        againTry(order) {\n            switch (order.type) {\n                case \"order\":\n                    return this.filters.adjustment ? \"text-start\" : \"text-danger\";\n                case \"ready\":\n                    return this.filters.adjustment ? \"text-center\" : \"text-danger\";\n                case \"demand\":\n                    return this.filters.adjustment ? \"text-end\" : \"text-danger\";\n            }\n        },\n        //\n        handleInput(color) {\n            if (color && typeof color === \"object\") {\n                // Ensure the color object and quantity property are defined\n                if (color.quantity === undefined) {\n                    this.$set(color, \"quantity\", 0); // Set a default value if quantity is undefined\n                }\n\n                // Ensure the entered value is not less than 0\n                color.quantity = Math.max(0, color.quantity);\n            }\n        },\n        getActiveClass(order) {\n            return {\n                \"text-primary\": order.status === \"issued\",\n                \"text-warning\": order.status === \"cancelled\",\n                \"text-dark\": order.status === \"accepted\",\n            };\n        },\n        shouldShow(ledgerItem) {\n            if (ledgerItem.model === 'dispatch') {\n                return false;\n            }\n            let result = this.filters[ledgerItem.model];\n            if (ledgerItem.model === \"adjustment\") {\n                return result && this.filters[ledgerItem.type];\n            } else {\n                return result;\n            }\n        },\n        calculateTotal(model) {\n            // Check for the necessary conditions using optional chaining\n            if (\n                !this.ledger?.items?.data ||\n                !Array.isArray(this.ledger.items.data) ||\n                !this.filters[model]\n            ) {\n                return 0;\n            }\n\n            // Use reduce directly without a separate filter step\n            return this.ledger.items.data.reduce((total, item) => {\n                // Add item quantity if the item matches the model or is an adjustment of the same type\n                if (item.model === model) {\n                    return total + item.quantity;\n                } else if (\n                    item.model === \"adjustment\" &&\n                    item.type === model &&\n                    this.filters[\"adjustment\"]\n                ) {\n                    return total - item.quantity;\n                }\n                return total; // Otherwise, keep the total unchanged\n            }, 0);\n        },\n        calculateTotalOrder(model, items, status) {\n            if (items && Array.isArray(items)) {\n                const filteredItems = items.filter((order) => (order.model === model) && this.filters[model] && (order.status === status));\n                return filteredItems.reduce((total, order) => total + order.quantity, 0);\n            } else {\n                return 0;\n            }\n        },\n        formatDate(dateTimeString) {\n            const options = {\n                weekday: \"short\",\n                month: \"short\",\n                day: \"numeric\",\n            };\n            const formattedTime = new Date(dateTimeString).toLocaleDateString(\n                \"en-US\",\n                options\n            );\n            return formattedTime;\n        },\n        postReady() {\n            if (this.ledger.product.options && this.total > 0) {\n                const quantities = this.ledger.product.options\n                    .map((option, index) => {\n\n                        // Get selected ranges for this option\n                        const selectedRanges = this.ledger.product.ranges\n                            .filter((range) => {\n                                const key = `${option.sid}_${range.sid}`;\n                                return this.formData.ranges[key]; // Check if this range is selected\n                            });\n                        \n                        // Calculate the quantity for each range, ensure it's at least 1, and round up\n                        const quantityPerRange = selectedRanges.length > 0\n                            ? Math.max(Math.ceil(this.formData.quantity[index] / selectedRanges.length), 1)\n                            : 0;\n                        \n                        return selectedRanges.map((range) => {\n                            const key = `${option.sid}_${range.sid}`;\n                            return { [key]: quantityPerRange };\n                        });\n                    })\n                    .flat();\n                \n                // loop thru quantities and check that value should not be undefined or null or Nan\n                // also compute total quantity and is should not exceed ledger.readeable_aty\n                let totalQty = 0;\n                let checkQuantities = [];\n                quantities.forEach((quantity) => {\n                    const key = Object.keys(quantity)[0];\n                    const value = quantity[key];\n                    if (value && value > 0) {\n                        totalQty += value;\n                        checkQuantities.push(quantity);\n                    }\n                });\n\n                if (totalQty > this.ledger.readyable_qty) {\n                    this.showQtyError(\n                        \"Quantity Error\",\n                        \"Total quantity should not exceed \" + this.ledger.readyable_qty + \" pcs.\"\n                    );\n                    return;\n                }\n\n                const data = {\n                    ledger_sid: this.ledger.sid,\n                    content: this.formData.content,\n                    expected_at: this.formData.date,\n                    quantities: JSON.stringify(checkQuantities),\n                };\n\n                // Dispatch the action\n                this.$store.dispatch(\"factory/postNewReady\", data);\n\n                // Close the form\n                this.showLedgerSummary();\n\n            } else {\n                console.log(\n                    \"Quantity total is 0 or less, or ledger is empty. Skipping post request.\"\n                );\n            }\n        },\n        postDispatch() {\n            if (this.ledger.product.options && this.total > 0) {\n                // Map each option option to its selected ranges and quantities\n                const quantities = this.ledger.product.options\n                    .map((option, index) => {\n\n                        // Get selected ranges for this option\n                        const selectedRanges = this.ledger.product.ranges\n                            .filter((range) => {\n                                const key = `${option.sid}_${range.sid}`;\n                                return this.formData.ranges[key]; // Check if this range is selected\n                            });\n                        \n                        // Calculate the quantity for each range, ensure it's at least 1, and round up\n                        const quantityPerRange = selectedRanges.length > 0\n                            ? Math.max(Math.ceil(this.formData.quantity[index] / selectedRanges.length), 1)\n                            : 0;\n                        \n                        return selectedRanges.map((range) => {\n                            const key = `${option.sid}_${range.sid}`;\n                            return { [key]: quantityPerRange };\n                        });\n                    })\n                    .flat();\n\n                // loop thru quantities and check that value should not be undefined or null or Nan\n                // also compute total quantity and is should not exceed ledger.readeable_aty\n                let totalQty = 0;\n                let checkQuantities = [];\n                quantities.forEach((quantity) => {\n                    const key = Object.keys(quantity)[0];\n                    const value = quantity[key];\n                    if (value && value > 0) {\n                        totalQty += value;\n                        checkQuantities.push(quantity);\n                    }\n                });\n\n                console.log(totalQty, this.ledger.dispatchable_qty);\n                if (totalQty > this.ledger.dispatchable_qty) {\n                    this.showQtyError(\n                        \"Quantity Error\",\n                        \"Total quantity should not exceed \" + this.ledger.dispatchable_qty + \" pcs.\"\n                    );\n                    return;\n                }\n\n                // Prepare the data for dispatch\n                const data = {\n                    ledger_sid: this.ledger.sid,\n                    content: this.formData.content,\n                    expected_at: this.formData.date,\n                    quantities: JSON.stringify(checkQuantities),\n                };\n\n                // Dispatch the action\n                this.$store.dispatch(\"factory/postNewDispatch\", data);\n\n                // Close the form\n                this.showLedgerSummary();\n\n            } else {\n                console.log(\n                    \"Quantity total is 0 or less, or ledger is empty. Skipping post request.\"\n                );\n            }\n        },\n        postAdjustment() {\n            if (this.ledger.product.options && this.total > 0) {\n\n                const quantities = this.ledger.product.options\n                    .map((color, index) => {\n                        const selectedRanges = this.ledger.product.ranges\n                            .filter(size => this.formData.ranges[`${color.sid}_${size.sid}`]);\n\n                        let quantityPerRange = 0;\n                        if (selectedRanges.length > 0) {\n                            const totalQuantity = parseInt(this.formData.quantity[index]) || 0;\n                            quantityPerRange = Math.max(Math.ceil(totalQuantity / selectedRanges.length), 0);\n                        }\n\n                        return selectedRanges.map(size => {\n                            const key = `${color.sid}_${size.sid}`;\n                            return { [key]: quantityPerRange };\n                        });\n                    })\n                    .flat();\n\n                // loop thru quantities and check that value should not be undefined or null or Nan\n                // also compute total quantity and is should not exceed ledger.readeable_aty\n                let totalQty = 0;\n                let checkQuantities = [];\n                quantities.forEach((quantity) => {\n                    const key = Object.keys(quantity)[0];\n                    const value = quantity[key];\n                    if (value && value > 0) {\n                        totalQty += value;\n                        checkQuantities.push(quantity);\n                    }\n                });\n\n                if (this.formData.adjtype === 'ready' && totalQty > this.ledger.demandable_qty) {\n                    this.showQtyError(\n                        \"Quantity Error\",\n                        \"Total quantity should not exceed \" + this.ledger.demandable_qty + \" pcs.\"\n                    );\n                    return;\n                }\n                \n                const data = {\n                    ledger_sid: this.ledger.sid,\n                    content: this.formData.content,\n                    type: this.formData.adjtype,\n                    expected_at: this.formData.date,\n                    tolerance: this.formData.tolerance,\n                    product: this.ledger.product.slug,\n                    quantities: JSON.stringify(checkQuantities),\n                };\n\n                console.log(data);\n                \n                // Dispatch the action\n                this.$store.dispatch('factory/postNewAdjustment', data);\n\n                // Close the form\n                this.showLedgerSummary();\n\n            } else {\n                console.log(\"Quantity total is 0 or less, or ledger is empty. Skipping post request.\");\n            }\n        },\n        showQtyError(title, message) {\n            Swal.fire({\n                icon: \"error\",\n                title: title,\n                text: message,\n            });\n        },\n        handleFiltersChange(filters) {\n            this.filters = filters;\n        },\n        handleFormData(data) {\n            this.formData = data.data;\n            this.total = data.total;\n        },\n    },\n};\n</script>\n\n<style scoped>\n.custom-offcanvas-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1045;\n}\n\n.nav-link.active {\n    color: #fff;\n    /* background-color: #28CC9E; */\n    background-color: #000;\n}\n</style>\n","import { render } from \"./LedgerDetailPage.vue?vue&type=template&id=174f3b70&scoped=true\"\nimport script from \"./LedgerDetailPage.vue?vue&type=script&lang=js\"\nexport * from \"./LedgerDetailPage.vue?vue&type=script&lang=js\"\n\nimport \"./LedgerDetailPage.vue?vue&type=style&index=0&id=174f3b70&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-174f3b70\"]])\n\nexport default __exports__"],"names":["class","key","style","_createElementVNode","colspan","_hoisted_9","_hoisted_20","_hoisted_23","_hoisted_28","_hoisted_33","_hoisted_38","type","id","tabindex","src","_createElementBlock","_hoisted_1","_createVNode","_component_LedgerFilters","product","$options","ledger","info","total_ready","total_dispatch","onLedgerFiltersChanged","handleFiltersChange","$data","addReady","addDispatch","addAdjustment","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","items","data","length","_hoisted_5","hasFilteredItems","_Fragment","_renderList","filteredLedgerItems","ledgerItem","ledgerItemIndex","model_sid","_hoisted_7","_toDisplayString","formatDate","created_at","_normalizeClass","getTableDataClass","getActiveClass","model","quantity","toLocaleString","_hoisted_6","shouldShow","_hoisted_8","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","calculateTotalOrder","_hoisted_15","calculateTotal","_hoisted_16","_hoisted_17","_hoisted_18","visibleLinks","link","disabled","url","label","includes","href","onClick","_withModifiers","$event","loadLedger","_hoisted_21","_hoisted_19","_hoisted_24","_hoisted_22","activePage","_hoisted_25","_hoisted_26","_hoisted_27","_cache","args","showAddReady","_hoisted_29","_hoisted_30","_hoisted_31","readyable_qty","_hoisted_32","showAddDispatch","_hoisted_34","_hoisted_35","_hoisted_36","dispatchable_qty","_hoisted_37","showAddAdjustment","_hoisted_39","_hoisted_40","_hoisted_41","balance_qty","_hoisted_42","_hoisted_43","onSubmit","postReady","method","_component_LedgerForm","onFormData","handleFormData","_hoisted_44","showLedgerSummary","_hoisted_45","postDispatch","_hoisted_46","_hoisted_47","postAdjustment","_hoisted_48","_hoisted_49","_hoisted_50","_component_LedgerInfo","name","components","LedgerFilters","LedgerInfo","LedgerForm","filters","formData","total","watch","immediate","handler","this","calculateVisibleLinks","created","mounted","$store","dispatch","productImageModal","document","getElementById","addEventListener","event","triggerElement","relatedTarget","imageUrl","getAttribute","modalImage","querySelector","computed","getters","startDate","Date","endDate","filter","item","createdAt","created_on","methods","links","totalPages","startPage","Math","max","endPage","min","index","pageurl","firstload","split","$route","params","page","order","ready","demand","againTry","adjustment","handleInput","color","undefined","$set","status","result","Array","isArray","reduce","filteredItems","dateTimeString","options","weekday","month","day","formattedTime","toLocaleDateString","quantities","map","option","selectedRanges","ranges","range","sid","quantityPerRange","ceil","flat","totalQty","checkQuantities","forEach","Object","keys","value","push","showQtyError","ledger_sid","content","expected_at","date","JSON","stringify","console","log","size","totalQuantity","parseInt","adjtype","demandable_qty","tolerance","slug","title","message","Swal","icon","text","__exports__","render"],"sourceRoot":""}