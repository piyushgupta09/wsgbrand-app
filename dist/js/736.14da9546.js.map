{"version":3,"file":"js/736.14da9546.js","mappings":"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","sources":["webpack://wsgbrand-app-v1/./src/modules/brandy/pages/products/ProductLedgerPage.vue","webpack://wsgbrand-app-v1/./src/modules/brandy/pages/products/ProductLedgerPage.vue?6a37"],"sourcesContent":["<template>\n    <div class=\"font-title\">\n        \n        <LedgerFilters \n            :product=\"ledger.product\"\n            :info=\"{\n                label1: 'Ready Done',\n                label2: 'Dispatch Done',\n                value1: ledger.total_ready,\n                value2: ledger.total_dispatch,\n            }\"\n            @ledger-filters-changed=\"handleFiltersChange\" \n        />\n\n        <div v-if=\"!addOrder && !addDemand && !addAdjustment\" class=\"border\">\n            <table class=\"table table-striped table-borderless mb-0\" style=\"font-weight: 500\">\n                <thead>\n                    <tr class=\"table-dark\">\n                        <th class=\"ps-3 fw-bold text-start\">Date</th>\n                        <th class=\"fw-bold text-start\">Order</th>\n                        <th v-if=\"!isVendor\" class=\"fw-bold text-center\">Ready</th>\n                        <th v-if=\"!isVendor\" class=\"pe-3 fw-bold text-end\">Demand</th>\n                        <th v-if=\"isVendor\" class=\"pe-3 fw-bold text-end\">Dispatch</th>\n                    </tr>\n                </thead>\n\n                <!-- Check if there are any ledger items -->\n                <tbody v-if=\"ledger.items && ledger.items.data && ledger.items.data.length\">\n                    <!-- Check if filteredLedgerItems has items -->\n                    <template v-if=\"hasFilteredItems\">\n                        <tr v-show=\"shouldShow(ledgerItem)\" v-for=\"(ledgerItem, ledgerItemIndex) in filteredLedgerItems\"\n                            :key=\"ledgerItemIndex\" data-bs-toggle=\"offcanvas\" data-bs-target=\"#ledgerInfoModal\"\n                            :data-bs-ledgermodelsid=\"ledgerItem.model_sid\" aria-controls=\"ledgerInfoModal\">\n                            <td class=\"ps-3 text-start small\">\n                                {{ formatDate(ledgerItem.created_at) }}\n                            </td>\n                            <td colspan=\"3\" class=\"pe-3\" :class=\"[\n                                getTableDataClass(ledgerItem),\n                                getActiveClass(ledgerItem),\n                                { 'text-danger': ledgerItem.model === 'adjustment' },\n                            ]\">\n                                {{ ledgerItem.quantity.toLocaleString() }}\n                            </td>\n                        </tr>\n                    </template>\n                    <!-- No data available due to filter conditions -->\n                    <tr v-else>\n                        <td colspan=\"4\" class=\"py-5 text-center\">\n                            <span>No data available based on current filter.</span>\n                        </td>\n                    </tr>\n                </tbody>\n\n                <!-- No ledger items found, show 'Place First Order' button -->\n                <tbody v-else>\n                    <tr>\n                        <td :colspan=\"tableColspan\" class=\"py-5 text-center\">\n                            <div class=\"d-flex flex-column align-items-center justify-content-center\">\n                                <span>No ledger entries found.</span>\n                                <button class=\"btn btn-sm btn-dark fw-bold\" @click=\"showAddOrder\">\n                                    Place First Order\n                                </button>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n\n                <tfoot v-if=\"ledger.items && ledger.items.data && ledger.items.data.length\">\n                    <tr class=\"table-dark\">\n                        <td class=\"ps-3 text-start fw-bold\" style=\"min-width: 90px\">\n                            Total\n                        </td>\n                        <td class=\"text-start\" style=\"min-width: 90px\">\n                            {{ calculateTotalOrder('order', ledger.items.data, 'accepted') }}\n                        </td>\n                        <td v-if=\"!isVendor\" class=\"text-center\" style=\"min-width: 90px\">\n                            {{ calculateTotal(\"ready\").toLocaleString() }}\n                        </td>\n                        <td v-if=\"!isVendor\" class=\"pe-3 text-end\" style=\"min-width: 90px\">\n                            {{ calculateTotal(\"demand\").toLocaleString() }}\n                        </td>\n                        <td v-if=\"isVendor\" class=\"pe-3 text-end\" style=\"min-width: 90px\">\n                            {{ calculateTotal(\"demand\").toLocaleString() }}\n                        </td>\n                    </tr>\n                </tfoot>\n                \n            </table>\n\n            <!-- Pagination -->\n            <nav v-if=\"ledger.items && ledger.items.data && ledger.items.data.length\" aria-label=\"Page navigation\">\n                <ul class=\"pagination\">\n                    <li class=\"page-item flex-fill\" v-for=\"link in visibleLinks\" :key=\"link.label\"\n                        :class=\"{ disabled: !link.url }\">\n                        <a class=\"page-link text-center text-dark\" href=\"#\" v-if=\"link.label.includes('Previous')\"\n                            @click.prevent=\"loadLedger(link.url)\">\n                            <i class=\"bi bi-chevron-left\"></i>\n                        </a>\n                        <a class=\"page-link text-center text-dark\" href=\"#\" v-else-if=\"link.label.includes('Next')\"\n                            @click.prevent=\"loadLedger(link.url)\">\n                            <i class=\"bi bi-chevron-right\"></i>\n                        </a>\n                        <a href=\"#\" :class=\"{\n                            'text-primary fw-bold': this.activePage == link.label,\n                            'text-dark': this.activePage != link.label,\n                        }\" class=\"page-link text-center\" v-else @click.prevent=\"loadLedger(link.url)\">\n                            {{ link.label }}\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n\n        </div>\n\n        <table class=\"table table-striped table-borderless\">\n            <tbody>\n                <tr v-if=\"ledger.unaccepted\" class=\"table-danger\">\n                    <td class=\"ps-3\">\n                        <button class=\"btn btn-sm btn-dark rounded-0\" @click=\"goToOrder\">\n                            <i class=\"bi bi-chevron-right\"></i>\n                        </button>\n                        <span class=\"ms-3\">Not Yet Accepted</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{\n                            ledger.unaccepted ? ledger.unaccepted.toLocaleString() : 0\n                        }}\n                        pcs\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"ps-3\">\n                        <button class=\"btn btn-sm btn-dark rounded-0\" @click=\"showAddOrder\">\n                            <i class=\"bi bi-plus-lg\"></i>\n                        </button>\n                        <span class=\"ms-3\">In Production</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{\n                            ledger.readyable_qty ? ledger.readyable_qty.toLocaleString() : 0\n                        }}\n                        pcs\n                    </td>\n                </tr>\n                <tr v-if=\"isFactoryLedger\">\n                    <td class=\"ps-3\">\n                        <button class=\"btn btn-sm btn-dark rounded-0\" @click=\"showAddDemand\">\n                            <i class=\"bi bi-plus-lg\"></i>\n                        </button>\n                        <span class=\"ms-3\">Ready for Demand</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{\n                            ledger.demandable_qty\n                            ? ledger.demandable_qty.toLocaleString()\n                            : 0\n                        }}\n                        pcs\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"ps-3\">\n                        <button class=\"btn btn-sm btn-dark rounded-0\" @click=\"showAddAdjustment\">\n                            <i class=\"bi bi-plus-lg\"></i>\n                        </button>\n                        <span class=\"ms-3\">Ledger Balance</span>\n                    </td>\n                    <td class=\"pe-3 text-end\">\n                        {{ ledger.balance_qty ? ledger.balance_qty.toLocaleString() : 0 }}\n                        pcs\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n\n        <div v-if=\"addOrder || addDemand || addAdjustment\" class=\"card mx-3 shadow\">\n            <div class=\"card-body\">\n                <form v-if=\"addOrder\" @submit.prevent=\"postOrder()\" method=\"post\">\n                    <LedgerForm :product=\"ledger.product\" type=\"order\" @formData=\"handleFormData\" :isFactoryLedger=\"isFactoryLedger\" />\n                    <div class=\"btn-group w-100\">\n                        <button class=\"btn btn-sm btn-outline-dark fw-bold\" type=\"button\" @click=\"showLedgerSummary\">\n                            Cancel\n                        </button>\n                        <button class=\"btn btn-sm btn-success fw-bold\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n                <form v-if=\"addDemand && isFactoryLedger\" @submit.prevent=\"postDemand()\" method=\"post\">\n                    <LedgerForm :product=\"ledger.product\" type=\"demand\" @formData=\"handleFormData\" :isFactoryLedger=\"isFactoryLedger\" />\n                    <div class=\"btn-group w-100\">\n                        <button class=\"btn btn-sm btn-outline-dark fw-bold\" type=\"button\" @click=\"showLedgerSummary\">\n                            Cancel\n                        </button>\n                        <button class=\"btn btn-sm btn-success fw-bold\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n                <form v-if=\"addAdjustment\" @submit.prevent=\"postAdjustment()\" method=\"post\">\n                    <LedgerForm :product=\"ledger.product\" type=\"adjustment\" @formData=\"handleFormData\" :isFactoryLedger=\"isFactoryLedger\" />\n                    <div class=\"btn-group w-100\">\n                        <button class=\"btn btn-sm btn-outline-dark fw-bold\" type=\"button\" @click=\"showLedgerSummary\">\n                            Cancel\n                        </button>\n                        <button class=\"btn btn-sm btn-success fw-bold\" type=\"submit\">\n                            Submit\n                        </button>\n                    </div>\n                </form>\n            </div>\n        </div>\n\n        <div class=\"modal fade\" id=\"ledgerImageModal\" tabindex=\"-1\" aria-hidden=\"true\">\n            <div class=\"modal-dialog modal-fullscreen\">\n                <button type=\"button\" class=\"btn h-100 w-100 p-0\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\n                    <img src=\"https://placehold.co/400\" class=\"w-100\" style=\"object-fit: cover\" />\n                </button>\n            </div>\n        </div>\n\n        <LedgerInfo :items=\"ledger.items\" />\n\n    </div>\n</template>\n\n<script>\nimport \"sweetalert2/dist/sweetalert2.min.css\";\nimport Swal from \"sweetalert2\";\nimport LedgerFilters from \"@/components/LedgerFilters.vue\";\nimport LedgerInfo from \"@/components/LedgerInfo.vue\";\nimport LedgerForm from \"@/components/LedgerForm.vue\";\n\nexport default {\n    name: \"ProductLedgerPage\",\n    props: {\n        module: {\n            type: String,\n            default: \"brand\",\n        },\n    },\n    components: {\n        LedgerFilters,\n        LedgerInfo,\n        LedgerForm,\n    },\n    data() {\n        return {\n            filters: [],\n            formData: [],\n            addOrder: false,\n            addDemand: false,\n            addAdjustment: false,\n            total: 0,\n            activePage: 1,\n            visibleLinks: [], // Links to be actually rendered in the pagination\n        };\n    },\n    watch: {\n        'ledger.items': {\n            immediate: true,\n            handler() {\n                this.calculateVisibleLinks();\n            },\n        },\n        activePage() {\n            this.calculateVisibleLinks();\n        },\n    },\n    created() {\n        this.loadLedger(\"\", true);\n        this.$store.dispatch('brandy/setShowBottomNav', true);\n    },\n    mounted() {\n        const productImageModal = document.getElementById(\"ledgerImageModal\");\n        if (productImageModal) {\n            productImageModal.addEventListener(\"show.bs.modal\", (event) => {\n                const triggerElement = event.relatedTarget;\n                const imageUrl = triggerElement.getAttribute(\"data-bs-url\");\n                const modalImage = productImageModal.querySelector(\".modal-dialog img\");\n                modalImage.src = imageUrl;\n            });\n        }\n    },\n    computed: {\n        ledger() {\n            return this.$store.getters[\"brandy/ledger\"];\n        },\n        isFactoryLedger() {\n            if (this.ledger.party_id === undefined) {\n                return false;\n            }\n            return this.ledger.party_id.type === \"Product Factory\";\n        },\n        filteredLedgerItems() {\n            const startDate = new Date(this.filters.startDate);\n            const endDate = new Date(this.filters.endDate);\n            return this.ledger.items.data.filter((item) => {\n                const createdAt = new Date(item.created_on);\n                return createdAt >= startDate && createdAt <= endDate;\n            });\n        },\n        hasFilteredItems() {\n            return this.filteredLedgerItems && this.filteredLedgerItems.length > 0;\n        },\n        isVendor() {\n            if (this.ledger.party_id === undefined) {\n                return false;\n            }\n            return this.ledger.party_id.type === \"Product Vendor\";\n        },\n        tableColspan() {\n            return this.isVendor ? 3 : 4;\n        },\n        hasErrors() {\n            return Object.keys( this.$store.getters.errors).length > 0;\n        },\n    },\n    methods: {\n        calculateVisibleLinks() {\n\n            //return if ledger.items.links is not available\n            if (!this.ledger.items || !this.ledger.items.links) {\n                return;\n            }\n\n            const totalPages = this.ledger.items.links.length - 2; // Assuming first and last links are \"Previous\" and \"Next\"\n            let startPage = Math.max(1, this.activePage - 4);\n            let endPage = Math.min(totalPages, this.activePage + 3);\n\n            if (totalPages > 8) {\n                if (endPage - startPage < 7) {\n                    // Adjust range to maintain 8 links when near start or end\n                    if (startPage === 1) {\n                        endPage = 8;\n                    } else if (endPage === totalPages) {\n                        startPage = totalPages - 7;\n                    }\n                }\n            } else {\n                startPage = 1;\n                endPage = totalPages;\n            }\n\n            this.visibleLinks = this.ledger.items.links.filter((link, index) => {\n                return (\n                    link.label.includes('Previous') ||\n                    link.label.includes('Next') ||\n                    (index >= startPage && index <= endPage)\n                );\n            });\n        },\n        loadLedger(pageurl, firstload) {\n            // pageurl, firstload, preventDefault\n            // Your method to load ledger based on the URL, and potentially prevent default link action\n            // if (preventDefault) {\n            //     event.preventDefault();\n            // }\n\n            this.activePage = 1;\n            if (!firstload) {\n                this.activePage = pageurl.split(\"=\")[1];\n            }\n            this.$store.dispatch(\"brandy/fetchProductLedger\", {\n                ledger: this.$route.params.ledger,\n                page: this.activePage,\n            });\n        },\n        showAddOrder() {\n            this.addAdjustment = false;\n            this.addDemand = false;\n            this.addOrder = true;\n        },\n        showAddDemand() {\n            this.addAdjustment = false;\n            this.addOrder = false;\n            this.addDemand = true;\n        },\n        showAddAdjustment() {\n            this.addOrder = false;\n            this.addDemand = false;\n            this.addAdjustment = true;\n        },\n        showLedgerSummary() {\n            this.addOrder = false;\n            this.addDemand = false;\n            this.addAdjustment = false;\n        },\n        getTableDataClass(order) {\n            switch (order.model) {\n                case \"order\":\n                    return this.filters.order ? \"text-start\" : \"text-danger\";\n                case \"ready\":\n                    return this.filters.ready ? \"text-center\" : \"text-danger\";\n                case \"demand\":\n                    return this.filters.demand ? \"text-end\" : \"text-danger\";\n                case \"adjustment\":\n                    return this.againTry(order);\n                default:\n                    return \"text-end\";\n            }\n        },\n        againTry(order) {\n            switch (order.type) {\n                case \"order\":\n                    return this.filters.adjustment ? \"text-start\" : \"text-danger\";\n                case \"ready\":\n                    return this.filters.adjustment ? \"text-center\" : \"text-danger\";\n                case \"demand\":\n                    return this.filters.adjustment ? \"text-end\" : \"text-danger\";\n            }\n        },\n        //\n        handleInput(color) {\n            if (color && typeof color === \"object\") {\n                // Ensure the color object and quantity property are defined\n                if (color.quantity === undefined) {\n                    this.$set(color, \"quantity\", 0); // Set a default value if quantity is undefined\n                }\n\n                // Ensure the entered value is not less than 0\n                color.quantity = Math.max(0, color.quantity);\n            }\n        },\n        getActiveClass(order) {\n            return {\n                \"text-primary\": order.status === \"issued\",\n                \"text-warning\": order.status === \"cancelled\",\n                \"text-dark\": order.status === \"accepted\",\n            };\n        },\n        shouldShow(ledgerItem) {\n            if (ledgerItem.model === 'dispatch') {\n                return false;\n            }\n\n            if (this.ledger.party_id.type === 'Product Vendor' && ledgerItem.model === 'ready') {\n             return false;   \n            }\n\n            if (this.ledger.party_id.type === 'Product Vendor' && ledgerItem.model === 'demand') {\n             return false;   \n            }\n\n            let result = this.filters[ledgerItem.model];\n            if (ledgerItem.model === \"adjustment\") {\n                return result && this.filters[ledgerItem.type];\n            } else {\n                return result;\n            }\n        },\n        calculateTotal(model) {\n            // Check for the necessary conditions using optional chaining\n            if (\n                !this.ledger?.items?.data ||\n                !Array.isArray(this.ledger.items.data) ||\n                !this.filters[model]\n            ) {\n                return 0;\n            }\n\n            // Use reduce directly without a separate filter step\n            return this.ledger.items.data.reduce((total, item) => {\n                // Add item quantity if the item matches the model or is an adjustment of the same type\n                if (item.model === model) {\n                    return total + item.quantity;\n                } else if (\n                    item.model === \"adjustment\" &&\n                    item.type === model &&\n                    this.filters[\"adjustment\"]\n                ) {\n                    return total - item.quantity;\n                }\n                return total; // Otherwise, keep the total unchanged\n            }, 0);\n        },\n        calculateTotalOrder(model, items, status) {\n            if (items && Array.isArray(items)) {\n                const filteredItems = items.filter((order) => (order.model === model) && this.filters[model] && (order.status === status));\n                return filteredItems.reduce((total, order) => total + order.quantity, 0);\n            } else {\n                return 0;\n            }\n        },\n        formatDate(dateTimeString) {\n            const options = {\n                weekday: \"short\",\n                month: \"short\",\n                day: \"numeric\",\n            };\n            const formattedTime = new Date(dateTimeString).toLocaleDateString(\n                \"en-US\",\n                options\n            );\n            return formattedTime;\n        },\n        validateForm() {\n            let isValid = true;\n            this.errors = {}; // Reset errors\n            \n            // Validate content\n            if (this.formData.content && this.formData.content.length > 255) {\n                this.errors.content = 'Content must be 255 characters or less.';\n                isValid = false;\n            }\n\n            // Validate ledger_sid (example validation, replace with actual logic to check existence)\n            if (!this.formData.ledger_sid) {\n                this.errors.ledger_sid = 'Ledger SID is required.';\n                isValid = false;\n            }\n            \n            // Validate quantities\n            if (!this.formData.quantities) {\n                this.errors.quantities = 'Quantities are required.';\n                isValid = false;\n            }\n            \n            // Validate expected_at\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            const oneMonthFromNow = new Date(today);\n            oneMonthFromNow.setMonth(oneMonthFromNow.getMonth() + 1);\n\n            const selectedDate = new Date(this.formData.date);\n\n            if (selectedDate < today || selectedDate > oneMonthFromNow) {\n                this.errors.date = 'Date must be today or within the next month.';\n                isValid = false;\n            }\n            \n            return isValid;\n        },\n        postOrder() {\n            if (this.ledger.product.active) {\n                this.postCommon('brandy/postNewOrder');\n            } else {\n                Swal.fire({\n                    icon: \"error\",\n                    title: \"In Draft Mode\",\n                    text: \"This product is in draft mode. Please activate the product first.\",\n                });\n            }\n        },\n        postDemand() {\n            this.postCommon('brandy/postNewDemand');\n        },\n        postAdjustment() {\n            if (this.ledger.product.options && this.total > 0) {\n\n                const quantities = this.ledger.product.options\n                    .map((color, index) => {\n                        const selectedRanges = this.ledger.product.ranges\n                            .filter(size => this.formData.ranges[`${color.sid}_${size.sid}`]);\n\n                        let quantityPerRange = 0;\n                        if (selectedRanges.length > 0) {\n                            const totalQuantity = parseInt(this.formData.quantity[index]) || 0;\n                            quantityPerRange = Math.max(Math.ceil(totalQuantity / selectedRanges.length), 0);\n                        }\n\n                        return selectedRanges.map(size => {\n                            const key = `${color.sid}_${size.sid}`;\n                            return { [key]: quantityPerRange };\n                        });\n                    })\n                    .flat();\n\n                // loop thru quantities and check that value should not be undefined or null or Nan\n                // also compute total quantity and is should not exceed ledger.readeable_aty\n                let totalQty = 0;\n                let checkQuantities = [];\n                quantities.forEach((quantity) => {\n                    const key = Object.keys(quantity)[0];\n                    const value = quantity[key];\n                    if (value && value > 0) {\n                        totalQty += value;\n                        checkQuantities.push(quantity);\n                    }\n                });\n\n                if (this.formData.adjtype === 'order' && totalQty > this.ledger.readyable_qty) {\n                    this.showQtyError(\n                        \"Quantity Error\",\n                        \"Total quantity should not exceed \" + this.ledger.readyable_qty + \" pcs.\"\n                    );\n                    return;\n                }\n\n                if (this.formData.adjtype === 'demand' && totalQty > this.ledger.dispatchable_qty) {\n                    this.showQtyError(\n                        \"Quantity Error\",\n                        \"Total quantity should not exceed \" + this.ledger.dispatchable_qty + \" pcs.\"\n                    );\n                    return;\n                }\n                \n                const data = {\n                    ledger_sid: this.ledger.sid,\n                    content: this.formData.content,\n                    type: this.formData.adjtype,\n                    expected_at: this.formData.date,\n                    tolerance: this.formData.tolerance,\n                    product: this.ledger.product.slug,\n                    quantities: JSON.stringify(checkQuantities),\n                };\n\n                console.log(data);\n                \n                // Dispatch the action\n                this.$store.dispatch('brandy/postNewAdjustment', data);\n\n                // Close the form\n                this.showLedgerSummary();\n\n            } else {\n                console.log(\"Quantity total is 0 or less, or ledger is empty. Skipping post request.\");\n            }\n        },\n        postCommon(actionType) {\n            if (this.ledger.product.options && this.total > 0) {\n                const quantities = this.ledger.product.options\n                    .map((color, index) => {\n                        const selectedRanges = this.ledger.product.ranges\n                            .filter(size => this.formData.ranges[`${color.sid}_${size.sid}`]);\n\n                        let quantityPerRange = 0;\n                        if (selectedRanges.length > 0) {\n                            const totalQuantity = parseInt(this.formData.quantity[index]) || 0;\n                            quantityPerRange = Math.max(Math.ceil(totalQuantity / selectedRanges.length), 0);\n                        }\n\n                        return selectedRanges.map(size => {\n                            const key = `${color.sid}_${size.sid}`;\n                            return { [key]: quantityPerRange };\n                        });\n                    })\n                    .flat();\n\n                // loop thru quantities and check that value should not be undefined or null or Nan\n                // also compute total quantity and is should not exceed ledger.readeable_aty\n                let totalQty = 0;\n                let checkQuantities = [];\n                quantities.forEach((quantity) => {\n                    const key = Object.keys(quantity)[0];\n                    const value = quantity[key];\n                    if (value && value > 0) {\n                        totalQty += value;\n                        checkQuantities.push(quantity);\n                    }\n                });\n\n                if (actionType === 'brandy/postNewDemand' && totalQty > this.ledger.demandable_qty) {\n                    this.showQtyError(\n                        \"Quantity Error\",\n                        \"Total quantity should not exceed \" + this.ledger.demandable_qty + \" pcs.\"\n                    );\n                    return;\n                }\n\n                const data = {\n                    ledger_sid: this.ledger.sid,\n                    content: this.formData.content,\n                    expected_at: this.formData.date,\n                    tolerance: this.formData.tolerance,\n                    product: this.ledger.product.slug,\n                    quantities: JSON.stringify(checkQuantities),\n                };\n                \n                // Dispatch the action\n                this.$store.dispatch(actionType, data);\n                \n                // Close the form\n                this.showLedgerSummary();\n\n            } else {\n                console.log(\"Quantity total is 0 or less, or ledger is empty. Skipping post request.\");\n            }\n        },\n        showQtyError(title, message) {\n            Swal.fire({\n                icon: \"error\",\n                title: title,\n                text: message,\n            });\n        },\n        handleFiltersChange(filters) {\n            this.filters = filters;\n        },\n        handleFormData(data) {\n            this.formData = data.data;\n            this.total = data.total;\n        },\n        goToOrder() {\n            this.$router.push({ name: \"BrandPos\" });\n        },\n    },\n};\n</script>\n\n<style scoped>\n.custom-offcanvas-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 1045;\n}\n\n.nav-link.active {\n    color: #fff;\n    /* background-color: #28CC9E; */\n    background-color: #000;\n}\n</style>\n","import { render } from \"./ProductLedgerPage.vue?vue&type=template&id=494b621c&scoped=true\"\nimport script from \"./ProductLedgerPage.vue?vue&type=script&lang=js\"\nexport * from \"./ProductLedgerPage.vue?vue&type=script&lang=js\"\n\nimport \"./ProductLedgerPage.vue?vue&type=style&index=0&id=494b621c&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-494b621c\"]])\n\nexport default __exports__"],"names":["class","key","style","_createElementVNode","colspan","_hoisted_14","_hoisted_30","_hoisted_33","_hoisted_39","_hoisted_44","_hoisted_50","_hoisted_55","type","id","tabindex","src","_createElementBlock","_hoisted_1","_createVNode","_component_LedgerFilters","product","$options","ledger","info","total_ready","total_dispatch","onLedgerFiltersChanged","handleFiltersChange","$data","addOrder","addDemand","addAdjustment","_createCommentVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","isVendor","_hoisted_7","_hoisted_8","_hoisted_9","items","data","length","_hoisted_10","hasFilteredItems","_Fragment","_renderList","filteredLedgerItems","ledgerItem","ledgerItemIndex","model_sid","_hoisted_12","_toDisplayString","formatDate","created_at","_normalizeClass","getTableDataClass","getActiveClass","model","quantity","toLocaleString","_hoisted_11","shouldShow","_hoisted_13","_hoisted_15","_hoisted_16","tableColspan","_hoisted_18","_hoisted_19","onClick","_cache","args","showAddOrder","_hoisted_17","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","calculateTotalOrder","_hoisted_24","calculateTotal","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","visibleLinks","link","disabled","url","label","includes","href","_withModifiers","$event","loadLedger","_hoisted_31","_hoisted_29","_hoisted_34","_hoisted_32","activePage","_hoisted_35","_hoisted_36","unaccepted","_hoisted_37","_hoisted_38","goToOrder","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_45","_hoisted_46","_hoisted_47","readyable_qty","isFactoryLedger","_hoisted_48","_hoisted_49","showAddDemand","_hoisted_51","_hoisted_52","_hoisted_53","demandable_qty","_hoisted_54","showAddAdjustment","_hoisted_56","_hoisted_57","_hoisted_58","balance_qty","_hoisted_59","_hoisted_60","onSubmit","postOrder","method","_component_LedgerForm","onFormData","handleFormData","_hoisted_61","showLedgerSummary","_hoisted_62","postDemand","_hoisted_63","_hoisted_64","postAdjustment","_hoisted_65","_hoisted_66","_hoisted_67","_component_LedgerInfo","name","props","module","String","default","components","LedgerFilters","LedgerInfo","LedgerForm","filters","formData","total","watch","immediate","handler","this","calculateVisibleLinks","created","$store","dispatch","mounted","productImageModal","document","getElementById","addEventListener","event","triggerElement","relatedTarget","imageUrl","getAttribute","modalImage","querySelector","computed","getters","undefined","party_id","startDate","Date","endDate","filter","item","createdAt","created_on","hasErrors","Object","keys","errors","methods","links","totalPages","startPage","Math","max","endPage","min","index","pageurl","firstload","split","$route","params","page","order","ready","demand","againTry","adjustment","handleInput","color","$set","status","result","Array","isArray","reduce","filteredItems","dateTimeString","options","weekday","month","day","formattedTime","toLocaleDateString","validateForm","isValid","content","ledger_sid","quantities","today","setHours","oneMonthFromNow","setMonth","getMonth","selectedDate","date","active","postCommon","Swal","icon","title","text","map","selectedRanges","ranges","size","sid","quantityPerRange","totalQuantity","parseInt","ceil","flat","totalQty","checkQuantities","forEach","value","push","adjtype","showQtyError","dispatchable_qty","expected_at","tolerance","slug","JSON","stringify","console","log","actionType","message","$router","__exports__","render"],"sourceRoot":""}